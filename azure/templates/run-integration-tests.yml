parameters:
  - name: test_type

steps:

  - task: s3-cache-action@1
    inputs:
      key: 'poetry | ./poetry.lock'
      location: '.venv'
      debug: true
      workingDirectory: $(SERVICE_DIR)
    name: poetryCache
    displayName: cache python dependencies

  - bash: |
      make install-python
    workingDirectory: $(SERVICE_DIR)
    condition: ne(variables['poetryCache.cacheRestored'], 'true')
    displayName: poetry install

  - template: "azure/components/aws-assume-role.yml@common"
    parameters:
      role: "auto-ops"
      profile: "apm_ptl"

  - template: "azure/components/get-aws-secrets-and-ssm-params.yml@common"
    parameters:
        secret_file_ids:
          - ptl/app-credentials/jwt_testing/non-prod/JWT_TESTING_PRIVATE_KEY
          - ptl/app-credentials/jwt_testing/non-prod/ID_TOKEN_TESTING_PRIVATE_KEY
          - ptl/app-credentials/jwt_testing/non-prod/ID_TOKEN_NHS_LOGIN_PRIVATE_KEY
          - ptl/app-credentials/identity-service/non-prod/ACCESS_TOKEN_SECRET
        config_ids: []
        secret_ids: []

  - bash: |

      export OAUTH_BASE_URI="https://$(APIGEE_ENVIRONMENT).api.service.nhs.uk"
      export OAUTH_PROXY="$(SERVICE_BASE_PATH)"
      export SERVICE_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
      export ID_TOKEN_PRIVATE_KEY_ABSOLUTE_PATH="$(Pipeline.Workspace)/secrets/$(ID_TOKEN_TESTING_PRIVATE_KEY)"
      export ID_TOKEN_NHS_LOGIN_PRIVATE_KEY_ABSOLUTE_PATH="$(Pipeline.Workspace)/secrets/$(ID_TOKEN_NHS_LOGIN_PRIVATE_KEY)"
      export JWT_PRIVATE_KEY_ABSOLUTE_PATH="$(Pipeline.Workspace)/secrets/$(JWT_TESTING_PRIVATE_KEY)"
      export APIGEE_API_TOKEN="$(secret.AccessToken)"
      export ACCESS_TOKEN_SECRET="$(ACCESS_TOKEN_SECRET)"
      echo $OAUTH_BASE_URI
      echo $OAUTH_PROXY
      echo $ACCESS_TOKEN_SECRET
      echo $APIGEE_API_TOKEN
      make -C e2e ${{ parameters.test_type }}
    workingDirectory: $(SERVICE_DIR)
    displayName: run ${{ parameters.test_type }} tests

  - task: PublishTestResults@2
    displayName: publish ${{ parameters.test_type }} test results
    inputs:
      testResultsFiles: |
        $(SERVICE_DIR)/reports/${{ parameters.test_type }}.xml
      failTaskOnFailedTests: true
