parameters:
  - name: service_name
    type: string

steps:
  - bash: |
      pip install virtualenv
      virtualenv test_env
      source ./test_env/bin/activate
      pip install -r requirements.txt
    workingDirectory: $(Pipeline.Workspace)/s/${{ parameters.service_name }}/$(SERVICE_ARTIFACT_NAME)/api_tests
    displayName: Setup integration tests

  - bash: |
      source ./test_env/bin/activate

      export SERVICE_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
      export OAUTH_BASE_URI="https://$(APIGEE_ENVIRONMENT).api.service.nhs.uk"
      export OAUTH_PROXY="$(SERVICE_BASE_PATH)"
      export HELLO_WORLD_API_URL="https://$(APIGEE_ENVIRONMENT).api.service.nhs.uk/hello-world/hello/user"
      export APIGEE_API_TOKEN="$(secret.AccessToken)"
      export JWT_PRIVATE_KEY_ABSOLUTE_PATH="$(Pipeline.Workspace)/secrets/$(JWT_TESTING_PRIVATE_KEY)"

      pytest -v --junitxml=test-report.xml
    workingDirectory: $(Pipeline.Workspace)/s/${{ parameters.service_name }}/$(SERVICE_ARTIFACT_NAME)/api_tests
    displayName: Run integration tests

  - task: PublishTestResults@2
    displayName: 'Publish integration test results'
    condition: always()
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/${{ parameters.service_name }}/$(SERVICE_ARTIFACT_NAME)/api_tests/test-report.xml'
      failTaskOnFailedTests: true
