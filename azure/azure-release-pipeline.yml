name: Identity Service Release

trigger:
  branches:
    include:
      - refs/tags/v*

pr: none

parameters:
  - name : artifactBranch
    displayName: Artifact Branch (e.g. feature/myfeature)
    type: string
    default: $(Build.SourceBranch)
  - name : artifactBuildId
    displayName: Artifact Build Id (e.g. run Id for the build to download). Overrides Artifact Branch if not "latest".
    type: string
    default: latest

variables:
  SERVICE_NAME: IdentityService
  SERVICE_BASE_PATH: /oauth2
  VARIABLES_KVM: identity-service-variables
  ENCRYPTED_VARIABLES_KVM: identity-service-variables-encrypted
  IDENTITY_TARGET_SERVER: identity-server
  SPEC_FILE_NAME: identity-service

resources:
  pipelines:
  - pipeline: IdentityService
    source: Identity-Service-Build

pool:
  vmImage: 'ubuntu-latest'

# stages:
# - stage: DeployInternalDev
#   displayName: internal-dev
#   variables:
#   - group: apigee-nonprod
#   - group: env-internal-dev
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'internal-dev'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

stages:
  - stage: DeployInternalDev
    displayName: internal-dev
    variables:
    - group: apigee-nonprod
    - group: env-internal-dev
    jobs:
      - deployment: DeployService
        displayName: Deploy Service
        environment: 'internal-dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download Build Artifact'
                  inputs:
                    source: 'specific'
                    project: '$(resources.pipeline.IdentityService.projectID)'
                    definition: '$(resources.pipeline.IdentityService.pipelineID)'
                    preferTriggeringPipeline: true
                    ${{ if eq(parameters.artifactBuildId, 'latest') }}:
                      buildVersionToDownload: 'latestFromBranch'
                    ${{ if ne(parameters.artifactBuildId, 'latest') }}:
                      buildVersionToDownload: 'specific'
                      runId: '${{ parameters.artifactBuildId }}'
                    ${{ if eq(parameters.artifactBranch, '$(Build.SourceBranch)') }}:
                      branchName: '$(Build.SourceBranch)'
                    ${{ if ne(parameters.artifactBranch, '$(Build.SourceBranch)') }}:
                      branchName: 'refs/heads/${{ parameters.artifactBranch }}'
                    downloadPath: '$(Pipeline.Workspace)/$(SERVICE_NAME)'
                - bash: ls $(Pipeline.Workspace)
                - bash: ls $(Pipeline.Workspace)/$(SERVICE_NAME)
                - template: templates/identity-service-templating.yml
                - template: templates/deploy-namespaced-service.yml

# - stage: DeployInternalQA
#   displayName: internal-qa
#   dependsOn: DeployInternalDev
#   variables:
#     - group: apigee-nonprod
#     - group: env-internal-qa
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'internal-qa'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml


  - stage: DeployInternalQA
    displayName: internal-qa
    variables:
    - group: apigee-nonprod
    - group: env-internal-qa
    jobs:
      - deployment: DeployService
        displayName: Deploy Service
        environment: 'internal-qa'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download Build Artifact'
                  inputs:
                    source: 'specific'
                    project: '$(resources.pipeline.IdentityService.projectID)'
                    definition: '$(resources.pipeline.IdentityService.pipelineID)'
                    preferTriggeringPipeline: true
                    ${{ if eq(parameters.artifactBuildId, 'latest') }}:
                      buildVersionToDownload: 'latestFromBranch'
                    ${{ if ne(parameters.artifactBuildId, 'latest') }}:
                      buildVersionToDownload: 'specific'
                      runId: '${{ parameters.artifactBuildId }}'
                    ${{ if eq(parameters.artifactBranch, '$(Build.SourceBranch)') }}:
                      branchName: '$(Build.SourceBranch)'
                    ${{ if ne(parameters.artifactBranch, '$(Build.SourceBranch)') }}:
                      branchName: 'refs/heads/${{ parameters.artifactBranch }}'
                    downloadPath: '$(Pipeline.Workspace)/$(SERVICE_NAME)'
                - bash: ls $(Pipeline.Workspace)
                - bash: ls $(Pipeline.Workspace)/$(SERVICE_NAME)
                - template: templates/identity-service-templating.yml
                - template: templates/deploy-namespaced-service.yml

# - stage: DeployInternalQASandbox
#   displayName: internal-qa-sandbox
#   dependsOn: DeployInternalDev
#   variables:
#     - group: apigee-nonprod
#     - group: env-internal-qa-sandbox
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'internal-qa-sandbox'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeployInternalPortal
#   displayName: internal-portal
#   dependsOn: DeployInternalDev
#   variables:
#     - group: apigee-nonprod
#     - group: env-internal-portal
#   jobs:
#     - deployment: DeploySpecs
#       displayName: Deploy Specs
#       environment: 'internal-portal'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/deploy-specs.yml

# - stage: DeployRef
#   displayName: ref
#   dependsOn: 
#     - DeployInternalQA
#     - DeployInternalQASandbox
#   variables:
#     - group: apigee-nonprod
#     - group: env-ref
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'ref'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeployDev
#   displayName: dev
#   dependsOn: 
#     - DeployRef
#   variables:
#     - group: apigee-prod
#     - group: env-dev
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'dev'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeployProd
#   displayName: prod
#   dependsOn: 
#     - DeployRef
#   variables:
#     - group: apigee-prod
#     - group: env-prod
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'prod'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeploySandbox
#   displayName: sandbox
#   dependsOn: 
#     - DeployRef
#   variables:
#     - group: apigee-prod
#     - group: env-sandbox
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'sandbox'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeployInt
#   displayName: int
#   dependsOn: 
#     - DeployRef
#   variables:
#     - group: apigee-prod
#     - group: env-int
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'int'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeployIntNoSmartCard
#   displayName: int no-smartcard
#   dependsOn: 
#     - DeployRef
#   variables:
#     - group: apigee-prod
#     - group: env-int
#   jobs:
#     - deployment: DeployService
#       displayName: Deploy Service
#       environment: 'int-no-smartcard'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/identity-service-templating.yml
#               - template: templates/deploy-service.yml

# - stage: DeployPortal
#   displayName: portal
#   dependsOn: []
#   variables:
#     - group: apigee-prod
#     - group: env-portal
#   jobs:
#     - deployment: DeploySpecs
#       displayName: Deploy Specs
#       condition: false
#       environment: 'portal'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - template: templates/deploy-specs.yml
