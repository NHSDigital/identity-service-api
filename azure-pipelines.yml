name: "$(BranchName)+$(BuildID)"

variables:
  Version: 'test'

trigger:
  tags:
    include:
      - v*

pr:
  branches:
    include: ['*']

jobs:
  - job: build
    displayName: Build & Test
    timeoutInMinutes: 10
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      API_TEST_ENV_FILE_PATH: "tests/e2e/environments/local.postman_environment.json"
      PIP_CACHE_DIR: ".poetry"
    steps:
      - checkout: self

      - task: UsePythonVersion@0
        displayName: "Use Python 3.8"
        inputs:
          versionSpec: "3.8"

      - bash: "sudo apt update && sudo apt-get install --yes default-jre default-jdk npm"
        displayName: Install apt dependencies

      - bash: "python -m pip install --upgrade pip setuptools wheel && pip install poetry"
        displayName: Install python dependencies

      - task: Cache@2
        displayName: "Cache Python Dependencies"
        inputs:
          key: '"$(Agent.OS)" | "python" | poetry.lock'
          path: ".poetry"
          restoreKeys: |
            "$(Agent.OS)" | "python" | poetry.lock
            "$(Agent.OS)" | "python"

      - task: Cache@2
        displayName: "Cache Package NPM Dependencies"
        inputs:
          key: '"$(Agent.OS)" | "node" | package-lock.json'
          path: "node_modules"
          restoreKeys: |
            "$(Agent.OS)" | "node" | package-lock.json
            "$(Agent.OS)" | "node"

      - bash: "make install"
        displayName: Install repo

      - bash: "make check-licenses"
        displayName: Check licenses

      - bash: "make lint"
        displayName: Lint

      - bash: "make publish"
        displayName: Compile Spec

      - bash: 'echo "##vso[task.setvariable variable=SPEC_VERSION]$(poetry run python scripts/calculate_version.py)"'
        displayName: Set SPEC_VERSION

      - bash: "make release"
        displayName: Build Release Package

      - publish: dist/
        artifact: identity-service-$(SPEC_VERSION)+$(Build.BuildNumber)
